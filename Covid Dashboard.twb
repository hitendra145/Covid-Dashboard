<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableua table 3)' inline='true' name='federated.0flm0rb16xoqcb1gt54ig0i36lcv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableua table 3' name='excel-direct.1bzhkic1565znc1gd82eo1l2j18u'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Acer/Documents/Tableua table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1bzhkic1565znc1gd82eo1l2j18u' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1bzhkic1565znc1gd82eo1l2j18u' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_52D20795CB3F4ABBBBC12D3358D5AC54]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_52D20795CB3F4ABBBBC12D3358D5AC54]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_52D20795CB3F4ABBBBC12D3358D5AC54]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_52D20795CB3F4ABBBBC12D3358D5AC54]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_52D20795CB3F4ABBBBC12D3358D5AC54]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_52D20795CB3F4ABBBBC12D3358D5AC54'>
            <properties context=''>
              <relation connection='excel-direct.1bzhkic1565znc1gd82eo1l2j18u' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableua Table 4)' inline='true' name='federated.14dlsif1htz77114m6gs91tjwt1c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableua Table 4' name='excel-direct.0nzb2ne0zbz2a7155urp11i0h4hb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Acer/Documents/Tableua Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0nzb2ne0zbz2a7155urp11i0h4hb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0nzb2ne0zbz2a7155urp11i0h4hb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_00D13558CD3D4A098D201ED748A46276]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_00D13558CD3D4A098D201ED748A46276]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_00D13558CD3D4A098D201ED748A46276]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_00D13558CD3D4A098D201ED748A46276]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_00D13558CD3D4A098D201ED748A46276]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_00D13558CD3D4A098D201ED748A46276]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' palette='traffic_light_10_0' type='palette'>
            <map to='#309143'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#51b364'>
              <multibucket>
                <bucket>&quot;Mexico&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8ace7e'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b60a1c'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b60a1c'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e03531'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e39802'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f0bd27'>
              <multibucket>
                <bucket>&quot;Mexico&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff684c'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffda66'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_00D13558CD3D4A098D201ED748A46276'>
            <properties context=''>
              <relation connection='excel-direct.0nzb2ne0zbz2a7155urp11i0h4hb' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableua table 1)' inline='true' name='federated.0ejun3g06jsrug10da1470h0gogq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableua table 1' name='excel-direct.0s3vfmc15l9k7n10x5qqu0rscn0a'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Acer/Documents/tableua table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0s3vfmc15l9k7n10x5qqu0rscn0a' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0s3vfmc15l9k7n10x5qqu0rscn0a' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_50060E2021FD4869A21C02300E155046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_50060E2021FD4869A21C02300E155046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_50060E2021FD4869A21C02300E155046]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_50060E2021FD4869A21C02300E155046]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_50060E2021FD4869A21C02300E155046'>
            <properties context=''>
              <relation connection='excel-direct.0s3vfmc15l9k7n10x5qqu0rscn0a' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableua table 2)' inline='true' name='federated.1hwtsnd163iy2w14srp191djs8fj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableua table 2' name='excel-direct.12fviit1czalh51f3qj9l01urte0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Acer/Documents/Tableua table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.12fviit1czalh51f3qj9l01urte0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.12fviit1czalh51f3qj9l01urte0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EF73AE5E0D5B4650A187297BE4379877]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EF73AE5E0D5B4650A187297BE4379877]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_EF73AE5E0D5B4650A187297BE4379877]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_EF73AE5E0D5B4650A187297BE4379877'>
            <properties context=''>
              <relation connection='excel-direct.12fviit1czalh51f3qj9l01urte0' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_C7933A2BC1224C2DA4A6E5927E21841D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Continent,Forecast Indicator' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableua table 1)' name='federated.0ejun3g06jsrug10da1470h0gogq' />
          </datasources>
          <datasource-dependencies datasource='federated.0ejun3g06jsrug10da1470h0gogq'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ejun3g06jsrug10da1470h0gogq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ejun3g06jsrug10da1470h0gogq].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ejun3g06jsrug10da1470h0gogq].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ejun3g06jsrug10da1470h0gogq].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ejun3g06jsrug10da1470h0gogq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ejun3g06jsrug10da1470h0gogq].[:Measure Names]' value='153' />
            <format attr='height' value='47' />
            <format attr='text-format' field='[federated.0ejun3g06jsrug10da1470h0gogq].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0ejun3g06jsrug10da1470h0gogq].[sum:DeathPercentage:qk]' value='n#,##0.000000000;-#,##0.000000000' />
            <format attr='border-width' value='2' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0ejun3g06jsrug10da1470h0gogq].[:Measure Names]' value='21' />
            <format attr='background-color' scope='cols' value='#00ff00' />
            <format attr='border-width' value='2' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5eddc' />
            <format attr='border-width' value='2' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='2' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0ejun3g06jsrug10da1470h0gogq].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0ejun3g06jsrug10da1470h0gogq].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{19899DE1-EC9A-42B9-85A9-381DD01166DA}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableua table 2)' name='federated.1hwtsnd163iy2w14srp191djs8fj' />
          </datasources>
          <datasource-dependencies datasource='federated.1hwtsnd163iy2w14srp191djs8fj'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1hwtsnd163iy2w14srp191djs8fj].[none:location:nk]' direction='DESC' using='[federated.1hwtsnd163iy2w14srp191djs8fj].[sum:TotalDeathCount:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hwtsnd163iy2w14srp191djs8fj].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.087458610534668' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hwtsnd163iy2w14srp191djs8fj].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1hwtsnd163iy2w14srp191djs8fj].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{F527DD6C-F0D9-4DAC-A4F4-9AAE614CDB48}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableua table 3)' name='federated.0flm0rb16xoqcb1gt54ig0i36lcv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0flm0rb16xoqcb1gt54ig0i36lcv'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[Longitude (generated)]' field-type='quantitative' max='31939560.722587131' min='-14005807.476100555' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[Latitude (generated)]' field-type='quantitative' max='11995527.63742172' min='-4363214.572001134' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[sum:PercentPopulationInfected:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[none:Location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[none:Location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[none:Location:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[none:Location:nk]' />
              <geometry column='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[Latitude (generated)]</rows>
        <cols>[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1567D48B-811C-4DDE-88B8-F91FC3D82086}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableua Table 4)' name='federated.14dlsif1htz77114m6gs91tjwt1c' />
          </datasources>
          <datasource-dependencies datasource='federated.14dlsif1htz77114m6gs91tjwt1c'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.14dlsif1htz77114m6gs91tjwt1c].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.14dlsif1htz77114m6gs91tjwt1c].[tmn:date:qk]' value='141' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Location:nk]' />
              <text column='[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Location:nk]' />
              <color column='[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Forecast Indicator:nk]' />
              <text column='[federated.14dlsif1htz77114m6gs91tjwt1c].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14dlsif1htz77114m6gs91tjwt1c].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.14dlsif1htz77114m6gs91tjwt1c].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{E52A84B3-74FA-4F91-85D7-0212B5DC646F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97026' id='8' param='horz' type-v2='layout-flow' w='98580' x='710' y='1487'>
            <zone h='97026' id='6' type-v2='layout-basic' w='98580' x='710' y='1487'>
              <zone h='20382' id='3' name='Sheet 1' w='45692' x='710' y='1487'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28131' id='5' name='Sheet 2' w='36650' x='710' y='21869'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48513' id='10' name='Sheet 3' w='52888' x='46402' y='1487'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48513' id='12' name='Sheet 4' w='83024' x='710' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48513' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Location:nk]&#10;[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Forecast Indicator:nk]' type-v2='color' w='15556' x='83734' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28131' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1hwtsnd163iy2w14srp191djs8fj].[none:location:nk]' type-v2='color' w='9042' x='37360' y='21869'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97026' id='18' param='vert' type-v2='layout-flow' w='98580' x='710' y='1487'>
                <zone fixed-size='155' h='20382' id='3' is-fixed='true' name='Sheet 1' w='45692' x='710' y='1487'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48513' id='10' is-fixed='true' name='Sheet 3' w='52888' x='46402' y='1487'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='28131' id='5' is-fixed='true' name='Sheet 2' w='36650' x='710' y='21869'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28131' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1hwtsnd163iy2w14srp191djs8fj].[none:location:nk]' type-v2='color' w='9042' x='37360' y='21869'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48513' id='12' is-fixed='true' name='Sheet 4' w='83024' x='710' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='48513' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Location:nk]&#10;[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Forecast Indicator:nk]' type-v2='color' w='15556' x='83734' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{19085229-6C4C-4008-945F-3B024D8FFF9C}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{64CE8C19-AB30-4218-84E4-047686A21A0B}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hwtsnd163iy2w14srp191djs8fj].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2CF837E5-8FC5-45F6-AFFF-EE93689D4E2E}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0flm0rb16xoqcb1gt54ig0i36lcv].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{728AE888-4CC4-4EDC-A827-9815EC502FC6}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Location:nk]&#10;[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Forecast Indicator:nk]</field>
            <field>[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Location:nk]</field>
            <field>[federated.14dlsif1htz77114m6gs91tjwt1c].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D07205BF-0B39-4996-912B-A700E18A562E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight field='[federated.1hwtsnd163iy2w14srp191djs8fj].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Location:nk]&#10;[federated.14dlsif1htz77114m6gs91tjwt1c].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <device-preview visible='true' />
      <simple-id uuid='{9D38BC30-C00B-4293-A5B7-49FF699D1EE1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='72' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      Rux6Pp8AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
